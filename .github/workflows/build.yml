name: Build Expo App

on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: 'Build sur quelle plateforme ?'
        options:
          - ios
          - android
          - les_deux
        default: 'les_deux'

jobs:
  android-build:
    name: Build Android App
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'les_deux' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Android Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies with npm
        run: yarn install

      - name: Cache Expo CLI
        uses: actions/cache@v3
        with:
          path: ~/.expo
          key: expo-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            expo-${{ runner.os }}-

      - name: Cache EAS CLI
        uses: actions/cache@v3
        with:
          path: ~/.eas
          key: eas-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            eas-${{ runner.os }}-

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Log in to EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android
        run: eas build --platform android --profile production --local

      - name: Upload Android artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-app
          path: /home/runner/work/LibelluleApp/LibelluleApp/*.apk

  ios-build:
    name: Build iOS App
    runs-on: macos-latest
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'les_deux' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: |
            Pods
            ~/.cocoapods
            ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies with npm
        run: yarn install


      - name: Log in to EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS
        run: eas build --platform ios --profile production --local --non-interactive
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-app
          path: /Users/runner/work/LibelluleApp/LibelluleApp/*.ipa

      - name: Upload iOS app to App Store
        run: |
          xcrun altool --upload-app --type ios --file /Users/runner/work/LibelluleApp/LibelluleApp/*.ipa --username $APPLE_ID --password $APPLE_APP_SPECIFIC_PASSWORD
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
